Criei essa view para visão da Página 2
Nela, inseri os valores já calculados de LM1 e LM3 em valores float, adequados para a ferramenta Looker Studio.

CREATE OR REPLACE VIEW `teste-lcgbr-leticia.refined_teste_lcgbr_leticia.view_pix_transfer_summary` AS

WITH base AS (
  SELECT
    s.account_id,
    s.ano,
    s.mes,
    DATE(PARSE_DATE('%Y-%m', CONCAT(CAST(s.ano AS STRING), '-', LPAD(CAST(s.mes AS STRING), 2, '0')))) AS data_formatada,
    CONCAT(CAST(s.ano AS STRING), '-', LPAD(CAST(s.mes AS STRING), 2, '0')) AS ano_mes,
    w.number_of_transfers,
    w.number_of_accounts
  FROM `teste-lcgbr-leticia.refined_teste_lcgbr_leticia.refined_pix_summary` s
  LEFT JOIN `teste-lcgbr-leticia.refined_teste_lcgbr_leticia.sliding_window_calculations` w
    ON s.account_id = w.account_id AND CONCAT(CAST(s.ano AS STRING), '-', LPAD(CAST(s.mes AS STRING), 2, '0')) = w.month
),

resumo_mensal AS (
  SELECT
    account_id,
    data_formatada,
    ano_mes,
    SUM(number_of_transfers) AS number_of_transfers,
    SUM(number_of_accounts) AS number_of_accounts
  FROM base
  GROUP BY account_id, data_formatada, ano_mes
)

SELECT
  *,
  
  -- % L-M (mês anterior)
  SAFE_DIVIDE(
    number_of_transfers - LAG(number_of_transfers) OVER (PARTITION BY account_id ORDER BY data_formatada),
    LAG(number_of_transfers) OVER (PARTITION BY account_id ORDER BY data_formatada)
  )  AS pct_l1m_number_of_transfers,

  SAFE_DIVIDE(
    number_of_accounts - LAG(number_of_accounts) OVER (PARTITION BY account_id ORDER BY data_formatada),
    LAG(number_of_accounts) OVER (PARTITION BY account_id ORDER BY data_formatada)
  )  AS pct_l1m_number_of_accounts,

  -- % vs média últimos 3 meses (L-3M)
  SAFE_DIVIDE(
    number_of_transfers - AVG(number_of_transfers) OVER (PARTITION BY account_id ORDER BY data_formatada ROWS BETWEEN 3 PRECEDING AND 1 PRECEDING),
    AVG(number_of_transfers) OVER (PARTITION BY account_id ORDER BY data_formatada ROWS BETWEEN 3 PRECEDING AND 1 PRECEDING)
  )  AS pct_l3m_avg_number_of_transfers,

  SAFE_DIVIDE(
    number_of_accounts - AVG(number_of_accounts) OVER (PARTITION BY account_id ORDER BY data_formatada ROWS BETWEEN 3 PRECEDING AND 1 PRECEDING),
    AVG(number_of_accounts) OVER (PARTITION BY account_id ORDER BY data_formatada ROWS BETWEEN 3 PRECEDING AND 1 PRECEDING)
  )  AS pct_l3m_avg_number_of_accounts

FROM resumo_mensal;
